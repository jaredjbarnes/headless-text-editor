{"version":3,"sources":["../src/Observable.js"],"names":["Observable","observers","type","callback","observer","Observer","index","indexOf","splice","push","event","forEach","notify"],"mappings":";;;;;;;AAAA;;;;;;;;;;IACqBA,U;AACjB,wBAAc;AAAA;;AACV,SAAKC,SAAL,GAAiB,EAAjB;AACH;;;;4BACOC,I,EAAMC,Q,EAAU;AAAA;;AACpB,UAAMC,QAAQ,GAAG,IAAIC,iBAAJ,CAAaH,IAAb,EAAmBC,QAAnB,EAA6B,YAAM;AAChD,YAAMG,KAAK,GAAG,KAAI,CAACL,SAAL,CAAeM,OAAf,CAAuBH,QAAvB,CAAd;;AACA,YAAIE,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ,UAAA,KAAI,CAACL,SAAL,CAAeO,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACH;AACJ,OALgB,CAAjB;AAMA,WAAKL,SAAL,CAAeQ,IAAf,CAAoBL,QAApB;AACA,aAAOA,QAAP;AACH;;;2BACMM,K,EAAO;AACV,WAAKT,SAAL,CAAeU,OAAf,CAAuB,UAAAP,QAAQ,EAAI;AAC/BA,QAAAA,QAAQ,CAACQ,MAAT,CAAgBF,KAAhB;AACH,OAFD;AAGH;;;8BACS;AACN,WAAKT,SAAL,GAAiB,EAAjB;AACH","sourcesContent":["import Observer from './Observer';\nexport default class Observable {\n    constructor() {\n        this.observers = [];\n    }\n    observe(type, callback) {\n        const observer = new Observer(type, callback, () => {\n            const index = this.observers.indexOf(observer);\n            if (index > -1) {\n                this.observers.splice(index, 1);\n            }\n        });\n        this.observers.push(observer);\n        return observer;\n    }\n    notify(event) {\n        this.observers.forEach(observer => {\n            observer.notify(event);\n        });\n    }\n    dispose() {\n        this.observers = [];\n    }\n}\n"],"file":"Observable.js"}