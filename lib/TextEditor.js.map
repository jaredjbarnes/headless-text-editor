{"version":3,"sources":["../src/TextEditor.js"],"names":["clone","obj","JSON","parse","stringify","nonAlphaNumericCharacter","TextEditor","initialize","text","decorations","type","startIndex","endIndex","decorationManager","DecorationManager","observable","Observable","trackingDisabled","history","historyIndex","trackingKey","isMute","muteKey","observe","event","slice","push","length","shift","dispose","Object","assign","cursor","substring","index","getIndexUpFromIndex","moveCursor","getIndexDownFromIndex","isNaN","saveDecorationPlacementHistory","key","disableTracking","notifyChange","enableTracking","decoration","includes","left","Math","min","max","newDecoration","findDecorationIndex","splice","findIndex","d","filter","forEach","addDecoration","right","map","x","segments","keys","v","Number","sort","a","b","getCharacterLengthForText","setDecorations","notifyTextChange","collapse","expand","replaceText","historyKey","notificationKey","disableNotifications","selections","getRanges","cursorPosition","selection","removeAllRanges","enableNotifications","removeText","rows","split","passed","information","value","row","getRowInformation","find","r","rowIndex","indexOf","column","fromIndex","currentRow","offset","previousRow","nextRow","newIndex","character","charAt","test","notify","state","isSameText","callback","prepareEventForOnChange"],"mappings":"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","sourcesContent":["import DecorationManager from './DecorationManager';\nimport Observable from './Observable';\nconst clone = obj => {\n    return JSON.parse(JSON.stringify(obj));\n};\nconst nonAlphaNumericCharacter = /[^a-zA-Z]/;\nexport default class TextEditor {\n    constructor() {\n        this.initialize();\n    }\n    // #region Life Cycle Methods\n    initialize() {\n        this.text = '';\n        this.decorations = [\n            {\n                type: 'cursor',\n                startIndex: 0,\n                endIndex: 1,\n            },\n        ];\n        this.decorationManager = new DecorationManager(this);\n        this.observable = new Observable();\n        this.trackingDisabled = false;\n        this.history = [];\n        this.historyIndex = -1;\n        this.trackingKey = 0;\n        this.isMute = false;\n        this.muteKey = 0;\n        this.observable.observe('on-change', event => {\n            if (!this.trackingDisabled) {\n                this.history = this.history.slice(0, this.historyIndex + 1);\n                this.history.push(event);\n                this.historyIndex = this.history.length - 1;\n                if (this.history.length > 200) {\n                    this.history.shift();\n                }\n            }\n        });\n    }\n    dispose() {\n        this.observable.dispose();\n        this.initialize();\n    }\n    //#endregion\n    // #region Cursor Methods\n    get cursor() {\n        return this.decorations.filter(d => d.type === 'cursor')[0];\n    }\n    getCursor() {\n        return Object.assign({}, this.cursor);\n    }\n    getCharacterAtCursor() {\n        return this.text.substring(this.cursor.startIndex, this.cursor.endIndex);\n    }\n    moveCursorUp() {\n        const index = this.getIndexUpFromIndex(this.cursor.startIndex);\n        if (index != null) {\n            this.moveCursor(index);\n        }\n    }\n    moveCursorDown() {\n        const index = this.getIndexDownFromIndex(this.cursor.startIndex);\n        if (index != null) {\n            this.moveCursor(index);\n        }\n    }\n    moveCursorLeft() {\n        this.moveCursor(this.cursor.startIndex - 1);\n    }\n    moveCursorRight() {\n        this.moveCursor(this.cursor.startIndex + 1);\n    }\n    moveCursor(index) {\n        if (typeof index !== 'number' || isNaN(index)) {\n            return;\n        }\n        if (index > this.text.length) {\n            index = this.text.length;\n        }\n        if (index < 0) {\n            index = 0;\n        }\n        this.cursor.startIndex = index;\n        this.cursor.endIndex = index + 1;\n        this.decorationManager.saveDecorationPlacementHistory();\n        const key = this.disableTracking();\n        this.notifyChange();\n        this.enableTracking(key);\n    }\n    getCursorPosition() {\n        return this.cursor.startIndex;\n    }\n    moveToDecoration(decoration) {\n        if (this.decorations.includes(decoration) && decoration.type !== 'cursor') {\n            // This Makes the text sticky by having the cursor history from inside.\n            const left = Math.min(decoration.startIndex, decoration.endIndex);\n            this.moveCursor(left);\n            this.moveCursor(left);\n        }\n    }\n    //#endregion\n    // #region Decorations Methods\n    addDecoration(decoration) {\n        if (decoration.type === 'cursor') {\n            return;\n        }\n        decoration.startIndex = Math.max(0, decoration.startIndex);\n        decoration.startIndex = Math.min(decoration.startIndex, this.text.length);\n        decoration.endIndex = Math.max(0, decoration.endIndex);\n        decoration.endIndex = Math.min(decoration.endIndex, this.text.length);\n        this.decorations.push(clone(decoration));\n        this.notifyChange();\n    }\n    replaceDecoration(decoration, newDecoration) {\n        if (decoration.type === 'cursor' || newDecoration.type === 'cursor') {\n            return;\n        }\n        const index = this.findDecorationIndex(decoration);\n        if (index >= 0) {\n            newDecoration.startIndex = Math.max(0, newDecoration.startIndex);\n            newDecoration.startIndex = Math.min(newDecoration.startIndex, this.text.length);\n            newDecoration.endIndex = Math.max(0, newDecoration.endIndex);\n            newDecoration.endIndex = Math.min(newDecoration.endIndex, this.text.length);\n            this.decorations.splice(index, 1, newDecoration);\n        }\n        this.notifyChange();\n    }\n    findDecorationIndex(decoration) {\n        return this.decorations.findIndex(d => d.type === decoration.type &&\n            d.startIndex === decoration.startIndex &&\n            d.endIndex === decoration.endIndex);\n    }\n    removeDecoration(decoration) {\n        if (decoration.type === 'cursor') {\n            return;\n        }\n        const index = this.findDecorationIndex(decoration);\n        if (index >= 0) {\n            this.decorations.splice(index, 1);\n        }\n        this.notifyChange();\n    }\n    setDecorations(decorations) {\n        const key = this.disableTracking();\n        this.decorations = this.decorations.filter(d => d.type === 'cursor');\n        decorations.forEach(decoration => {\n            this.addDecoration(decoration);\n        });\n        this.notifyChange();\n        this.enableTracking(key);\n    }\n    normalizeDecorations() {\n        this.decorations = this.decorations.filter(d => d.startIndex === d.endIndex);\n        this.notifyChange();\n    }\n    getDecorations() {\n        return clone(this.decorations);\n    }\n    getDecorationsByType(type) {\n        return clone(this.decorations.filter(d => d.type === type));\n    }\n    getDecorationsByRange(startIndex, endIndex) {\n        startIndex = Math.min(startIndex, endIndex);\n        endIndex = Math.max(startIndex, endIndex);\n        return clone(this.decorations.filter(d => {\n            const left = Math.min(d.startIndex, d.endIndex);\n            const right = Math.max(d.startIndex, d.endIndex);\n            return Math.max(startIndex, left) < Math.min(endIndex, right);\n        }));\n    }\n    getSegmentsByRange(startIndex, endIndex, filter = () => true) {\n        startIndex = Math.max(startIndex, 0);\n        endIndex = Math.min(endIndex, this.text.length);\n        const map = {};\n        const decorations = this.decorations.filter(filter);\n        // Make markers for the first and last.\n        map[startIndex] = startIndex;\n        map[endIndex] = endIndex;\n        for (let x = 0; x < decorations.length; x++) {\n            const decoration = decorations[x];\n            const left = Math.min(decoration.startIndex, decoration.endIndex);\n            const right = Math.max(decoration.startIndex, decoration.endIndex);\n            if (startIndex <= left && endIndex >= left) {\n                map[left] = left;\n            }\n            if (startIndex <= right && endIndex >= right) {\n                map[right] = right;\n            }\n        }\n        const segments = Object.keys(map).map(v => {\n            return Number(v);\n        });\n        segments.sort((a, b) => a - b);\n        return segments;\n    }\n    //#endregion\n    // #region Text Methods\n    getCharacterLengthForText(text) {\n        return [...text].length;\n    }\n    getCharacterLength() {\n        return this.getCharacterLengthForText(this.text);\n    }\n    setText(text) {\n        if (typeof text === 'string') {\n            this.text = text;\n            this.cursor.startIndex = 0;\n            this.cursor.endIndex = 1;\n            this.setDecorations([]);\n            this.notifyChange();\n            this.notifyTextChange();\n        }\n    }\n    getText() {\n        return this.text;\n    }\n    getTextByRange(startIndex, endIndex) {\n        let left = Math.min(startIndex, endIndex);\n        let right = Math.max(startIndex, endIndex);\n        left = Math.max(left, 0);\n        right = Math.min(right, this.text.length);\n        return this.text.substring(left, right);\n    }\n    replaceText(startIndex, endIndex, text = '') {\n        let left = Math.min(startIndex, endIndex);\n        let right = Math.max(startIndex, endIndex);\n        left = Math.max(left, 0);\n        right = Math.min(right, this.text.length);\n        this.text = this.text.slice(0, left) + text + this.text.slice(right);\n        this.decorationManager.collapse(left, right);\n        if (text.length > 0) {\n            this.decorationManager.expand(left, text.length);\n        }\n        this.notifyChange();\n        this.notifyTextChange();\n    }\n    removeText(startIndex, endIndex) {\n        this.replaceText(startIndex, endIndex, '');\n        this.moveCursor(startIndex);\n    }\n    insert(text) {\n        const historyKey = this.disableTracking();\n        const notificationKey = this.disableNotifications();\n        const selections = this.getRanges();\n        const cursorPosition = this.cursor.startIndex;\n        if (selections.length > 0) {\n            selections.forEach(selection => {\n                const left = Math.min(selection.startIndex, selection.endIndex);\n                const right = Math.max(selection.startIndex, selection.endIndex);\n                this.replaceText(left, right, text);\n                this.moveCursor(left + text.length);\n            });\n            this.removeAllRanges();\n        }\n        else {\n            this.replaceText(cursorPosition, cursorPosition, text);\n            this.moveCursor(cursorPosition + text.length);\n        }\n        this.enableNotifications(notificationKey);\n        this.enableTracking(historyKey);\n        this.notifyChange();\n        this.notifyTextChange();\n    }\n    backspace() {\n        const historyKey = this.disableTracking();\n        const notificationKey = this.disableNotifications();\n        const selections = this.getRanges();\n        const cursorPosition = this.cursor.startIndex;\n        if (selections.length > 0) {\n            selections.forEach(selection => {\n                this.removeText(selection.startIndex, selection.endIndex);\n            });\n            this.removeAllRanges();\n        }\n        else {\n            if (cursorPosition > 0) {\n                this.removeText(cursorPosition - 1, cursorPosition);\n            }\n        }\n        this.enableTracking(historyKey);\n        this.enableNotifications(notificationKey);\n        this.notifyChange();\n        this.notifyTextChange();\n    }\n    delete() {\n        const historyKey = this.disableTracking();\n        const notificationKey = this.disableNotifications();\n        const selections = this.getRanges();\n        const cursorPosition = this.cursor.startIndex;\n        if (selections.length > 0) {\n            selections.forEach(selection => {\n                this.removeText(selection.startIndex, selection.endIndex);\n            });\n            this.removeAllRanges();\n        }\n        else {\n            if (cursorPosition !== this.text.length) {\n                this.removeText(cursorPosition, cursorPosition + 1);\n            }\n        }\n        this.enableTracking(historyKey);\n        this.enableNotifications(notificationKey);\n        this.notifyChange();\n        this.notifyTextChange();\n    }\n    getRowInformation() {\n        const rows = this.text.split('\\n');\n        let passed = 0;\n        const information = rows.map(value => {\n            value = value + '\\n';\n            const row = {\n                startIndex: passed,\n                endIndex: passed + value.length,\n                value,\n            };\n            passed += value.length;\n            return row;\n        });\n        return information;\n    }\n    getPositionForIndex(index) {\n        const rows = this.getRowInformation();\n        const row = rows.find(r => index >= r.startIndex && index < r.endIndex);\n        if (row != null) {\n            const rowIndex = rows.indexOf(row);\n            return {\n                column: index - row.startIndex,\n                row: rowIndex,\n            };\n        }\n        return null;\n    }\n    getRowForIndex(index) {\n        const rows = this.getRowInformation();\n        return rows.find(r => index >= r.startIndex && index < r.endIndex);\n    }\n    getIndexUpFromIndex(fromIndex) {\n        const rows = this.getRowInformation();\n        const index = rows.findIndex(row => {\n            return fromIndex >= row.startIndex && fromIndex < row.endIndex;\n        });\n        const currentRow = rows[index];\n        const offset = fromIndex - currentRow.startIndex;\n        const previousRow = rows[index - 1];\n        if (previousRow) {\n            return Math.min(previousRow.startIndex + offset, previousRow.endIndex - 1);\n        }\n        else {\n            return null;\n        }\n    }\n    getIndexDownFromIndex(fromIndex) {\n        const rows = this.getRowInformation();\n        const index = rows.findIndex(row => {\n            return fromIndex >= row.startIndex && fromIndex < row.endIndex;\n        });\n        const currentRow = rows[index];\n        const offset = fromIndex - currentRow.startIndex;\n        const nextRow = rows[index + 1];\n        if (nextRow != null) {\n            return Math.min(nextRow.startIndex + offset, nextRow.endIndex - 1);\n        }\n        else {\n            return null;\n        }\n    }\n    getNextWordBreakFromIndex(index) {\n        let newIndex = index;\n        for (let x = index + 1; x <= this.text.length; x++) {\n            const character = this.text.charAt(x);\n            if (nonAlphaNumericCharacter.test(character)) {\n                newIndex = x;\n                break;\n            }\n            // We are at the end of the text.\n            if (x === this.text.length) {\n                newIndex = this.text.length;\n                break;\n            }\n        }\n        return newIndex;\n    }\n    getPreviousWordBreakFromIndex(index) {\n        let newIndex = index;\n        for (let x = index - 1; x >= 0; x--) {\n            const character = this.text.charAt(x);\n            if (nonAlphaNumericCharacter.test(character)) {\n                newIndex = x;\n                break;\n            }\n            // We are at the beginning of the text.\n            if (x === 0) {\n                newIndex = x;\n                break;\n            }\n        }\n        return newIndex;\n    }\n    // #endregion\n    // #region Range Methods\n    addRange(startIndex, endIndex) {\n        const key = this.disableTracking();\n        this.decorations.push({\n            type: 'selection',\n            startIndex: startIndex,\n            endIndex: endIndex,\n        });\n        this.moveCursor(endIndex);\n        this.observable.notify({\n            type: 'on-change',\n            text: this.text,\n            decorations: clone(this.decorations),\n        });\n        this.enableTracking(key);\n    }\n    removeAllRanges() {\n        const key = this.disableTracking();\n        if (this.decorations.findIndex(d => d.type === 'selection') > -1) {\n            this.setDecorations(this.decorations.filter(d => d.type !== 'selection'));\n        }\n        this.enableTracking(key);\n    }\n    removeRange(selection) {\n        const key = this.disableTracking();\n        if (this.decorations.includes(selection)) {\n            this.setDecorations(this.decorations.filter(d => d !== selection));\n        }\n        this.enableTracking(key);\n    }\n    getRanges() {\n        return this.decorations.filter(d => d.type === 'selection');\n    }\n    hasRanges() {\n        return this.getRanges().length > 0;\n    }\n    //#endregion\n    // #region History Methods\n    undo() {\n        if (this.historyIndex === 0) {\n            return;\n        }\n        this.historyIndex = this.historyIndex - 1;\n        const state = this.history[this.historyIndex];\n        if (state != null) {\n            const key = this.disableTracking();\n            const isSameText = this.text === state.text;\n            this.text = state.text;\n            this.decorations = state.decorations;\n            this.observable.notify(state);\n            if (!isSameText) {\n                this.observable.notify(Object.assign(Object.assign({}, state), { type: 'on-text-change' }));\n            }\n            this.enableTracking(key);\n        }\n    }\n    redo() {\n        if (this.historyIndex === this.history.length - 1) {\n            return;\n        }\n        this.historyIndex = this.historyIndex + 1;\n        const state = this.history[this.historyIndex];\n        if (state != null) {\n            const key = this.disableTracking();\n            const isSameText = this.text === state.text;\n            this.text = state.text;\n            this.decorations = state.decorations;\n            this.observable.notify(state);\n            if (!isSameText) {\n                this.observable.notify(Object.assign(Object.assign({}, state), { type: 'on-text-change' }));\n            }\n            this.enableTracking(key);\n        }\n    }\n    disableTracking() {\n        if (!this.trackingDisabled) {\n            this.trackingDisabled = true;\n            this.trackingKey++;\n            return this.trackingKey;\n        }\n        return null;\n    }\n    enableTracking(key) {\n        if (key === this.trackingKey) {\n            this.trackingDisabled = false;\n        }\n    }\n    //#endregion\n    // #region Event Methods\n    notify(event) {\n        return this.observable.notify(event);\n    }\n    observe(type, callback) {\n        return this.observable.observe(type, callback);\n    }\n    notifyChange() {\n        if (!this.isMute) {\n            const event = {\n                type: 'on-change',\n            };\n            const key = this.disableNotifications();\n            this.prepareEventForOnChange(event);\n            this.observable.notify(event);\n            this.enableNotifications(key);\n        }\n    }\n    notifyTextChange() {\n        if (!this.isMute) {\n            const event = {\n                type: 'on-text-change',\n            };\n            const key = this.disableNotifications();\n            this.prepareEventForOnChange(event);\n            this.observable.notify(event);\n            this.enableNotifications(key);\n        }\n    }\n    disableNotifications() {\n        if (!this.isMute) {\n            this.isMute = true;\n            this.muteKey += 1;\n            return this.muteKey;\n        }\n        return null;\n    }\n    enableNotifications(key) {\n        if (this.muteKey === key) {\n            this.isMute = false;\n        }\n    }\n    prepareEventForOnChange(event) {\n        event.text = this.text;\n        event.decorations = clone(this.decorations);\n    }\n    onChange(callback) {\n        return this.observable.observe('on-change', callback);\n    }\n    onTextChange(callback) {\n        return this.observable.observe('on-text-change', callback);\n    }\n}\n"],"file":"TextEditor.js"}